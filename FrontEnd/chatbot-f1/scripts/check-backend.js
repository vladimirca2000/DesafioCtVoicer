const https = require('https');
const axios = require('axios');

process.env.NODE_TLS_REJECT_UNAUTHORIZED = '0';

const API_URL = 'https://localhost:7000/api';
const SIGNALR_URL = 'https://localhost:7000/chathub';

async function checkBackend() {
  console.log('üîç Verificando conectividade com o backend...\n');

  try {
    console.log('üì° Testando API...');
    const response = await axios.get(`${API_URL}/Users/by-email?email=test@test.com`, {
      timeout: 5000,
      httpsAgent: new https.Agent({
        rejectUnauthorized: false
      })
    });
    console.log('‚úÖ API est√° respondendo!');
  } catch (error) {
    if (error.response && error.response.status === 404) {
      console.log('‚úÖ API est√° respondendo (usu√°rio n√£o encontrado √© esperado)');
    } else if (error.code === 'ECONNREFUSED') {
      console.log('‚ùå Backend n√£o est√° rodando em https://localhost:7000');
      console.log('   Certifique-se de que o backend .NET est√° ativo');
    } else {
      console.log('‚ö†Ô∏è  Erro na API:', error.message);
    }
  }

  try {
    console.log('\nüîó Testando SignalR Hub...');
    const response = await axios.get(SIGNALR_URL, {
      timeout: 5000,
      httpsAgent: new https.Agent({
        rejectUnauthorized: false
      })
    });
    console.log('‚úÖ SignalR Hub est√° acess√≠vel!');
  } catch (error) {
    if (error.response && error.response.status === 405) {
      console.log('‚úÖ SignalR Hub est√° acess√≠vel (m√©todo GET n√£o permitido √© esperado)');
    } else if (error.code === 'ECONNREFUSED') {
      console.log('‚ùå SignalR Hub n√£o est√° acess√≠vel');
    } else {
      console.log('‚ö†Ô∏è  Erro no SignalR Hub:', error.message);
    }
  }

  console.log('\nüìã URLs configuradas:');
  console.log(`   API: ${API_URL}`);
  console.log(`   SignalR: ${SIGNALR_URL}`);
  
  console.log('\nüí° Para iniciar o backend:');
  console.log('   1. Navegue at√© o diret√≥rio do backend');
  console.log('   2. Execute: dotnet run');
  console.log('   3. Ou abra no Visual Studio e pressione F5');
}

checkBackend().catch(console.error);
